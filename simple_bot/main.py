"""
–û–±–∑–æ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ aiogram.

https://github.com/aiogram/aiogram

- 100% –∞—Å–∏—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å
- –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ FSM
- middleware
- –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
- —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∞–ø–¥–µ–π—Ç—ã

–°–º–∞—Ä—Ç—á–∞—Å "Telegram Chat Bot Programming (advanced)"
"""

import logging

from aiogram import Bot, Dispatcher, executor, types


# —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather
BOT_TOKEN = ''


# —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è email-–∞–¥—Ä–µ—Å–æ–≤ (https://emailregex.com/)
EMAIL_REGEX = """(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])"""

# –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

USER_MENU = types.ReplyKeyboardMarkup(resize_keyboard=True)
USER_MENU.add(types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è', request_contact=True))
USER_MENU.add(types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é üó∫Ô∏è', request_location=True))


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kbd = types.ReplyKeyboardRemove()  # —É–±—Ä–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∫–Ω–æ–ø–∫–∏
    text = "–Ø –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç!"  # –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç
    await message.reply(text, reply_markup=kbd)


@dp.message_handler(commands=['menu'])
async def send_welcome(message: types.Message):
    text = "–ü—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é"
    await message.reply(text, reply_markup=USER_MENU)


@dp.message_handler(commands=['help'])
async def send_welcome(message: types.Message):
    text = "–°–ø–µ—à—É –Ω–∞ –ø–æ–º–æ—â—å!"
    await message.reply(text)


@dp.message_handler(regexp='–∫–æ—Ç')
async def cats(message: types.Message):
    # –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ data
    with open('data/cat.jpg', 'rb') as photo:
        """
        –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É "–∫–æ—Ç" –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è
        """
        await message.reply_photo(photo, caption='Not bad üò∫')


@dp.message_handler(content_types=types.ContentTypes.CONTACT)
async def content_contact_handler(message: types.Message):
    await bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')


@dp.message_handler(content_types=types.ContentTypes.LOCATION)
async def content_contact_handler(message: types.Message):
    await bot.delete_message(message.chat.id, message.message_id)
    await bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≥–µ–æ-–ª–æ–∫–∞—Ü–∏—é')


@dp.message_handler(content_types=types.ContentTypes.PHOTO)
async def content_contact_handler(message: types.Message):
    await bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ')


@dp.message_handler(regexp='—Å—Ç–∏–∫–µ—Ä')
async def content_contact_handler(message: types.Message):
    await bot.send_sticker(message.chat.id, 'https://raw.githubusercontent.com/yaitzhan/smart_hour_telegram_bot_programming/main/simple_bot/data/sample_sticker.webp?token=AHFRIIVDL3GFDVM5WPWD6F27R2FVW')


@dp.message_handler(regexp=EMAIL_REGEX)
async def email_handler(message: types.Message):
    await bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–ª–∏–¥–Ω—ã–π email-–∞–¥—Ä–µ—Å')


@dp.message_handler()
async def echo(message: types.Message):
    """
    –ü—Ä–æ—Å—Ç–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ä–∞–Ω–Ω–µ–µ —é–∑–µ—Ä–æ–º —Ç–µ–∫—Å—Ç
    """
    await message.answer(message.text)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
